string = "EOAACMFHBEAFIOAACMAAHHEMHCEMKCIKNOIKHDAAGFIKPDNFONIKAAJAANAACMHCEMNOJAIOEMAAIOAAGFBENBEMPDMFEMAAGFANJAONIOAAIOKCAAHHHCIKIOAFFHIKNOCMGFFHIKAAFHAAONIKPDIOCKEMCMGFFHEMJAJAIKHDAAIKGFJAIKOEEMJAIOIOAAFHAADCFOKBKBAADDGNAACMIKONHCANGFIOPDIKCMNFAAJAANAADCPHDIGNAAKOKKEDIOEIAAHCIKCMGFAAKKHCIKJAEMGFANJAONIKFHIKEIAAGFEMKCJAIOONIOAAKKMFPDAANOIKCMGFIODDJAOOGFAAAFANAACMCKEMGFAAOOFHEMPDIOCKEMJAIOBEAAFHAAOPJEFOAAHCANAFANAAFHMFHHOOCMONANAACMANHDIKKCIKNOJAMFKCAAANHCGFIOPDPDEMHCIOEICMONIOKCAAOOCMGFANJAIKFHIKONJEAAPHFOJEGADIAAONIKGFIKHCMFKCAACMIKCMGFANFHPDBEPDIOAAPDEMDDONIOEMAAMBHADLGHBFDCALBFGNAAJFGFANAAOOCMGFANJAIKFHONANAAIOHDEMPDANAAKKIKEMFHOOPJAAHCOOKKONOOAAKKEMAFAAONHCMFOEIOJEAACMPDANKKIKEMAAHHHCIKGFIOFHIKHHOOPDNFJAIKEMAAKKHCIKJAIOHCIKFHANJAIOEMJEAAKKEMJAAFIOJAIKFHMFEMAANOFHIODDANGFEMPDIOAAIOAAHHHCEMNOJAANAFJAANCKANPDANCMNFAANOPDBEAAIKDDJAEMFHIKEIAAHHIKNONOEMHCNBONIOAAANGFANONIOAAHHEMKCIKGFMFGNAALAIKNONOEMHCNBONOOAAGFANJAONIKFHAAIKCMOOEDEMCMGFFHPDBEPDIOAAKKIKPDEMEMAACMIKFHEMHCOEEMJAJAMFEMAAIOAAHDIKEDJAMFEMAAGFBENBEMPDMFEMAACMANHDIKKCIKNOJAMFEMAAOOCMGFANJAIKFHONIOAALHMBHADLDCPHOPJEAALHMBHADLDCOPOPJEAACMHCEMNOJAIOEMAAMBHADLALPHGNAAMBAACMEMJAGFBEKKHCBEAADCFOKBKBAADDGNAAHCANAFFHEMHCJAOOPDCMBEAAFHMFHHOOCMONAAHDIKEDJAIKEIAACMANHDIKKCIKNOJAIKEIAAOOCMGFANJAIKFHONIOAAMBHADLDCAJAJGNAADHIKAAONIKJACPANAADDIKNOANAAIOKCAACKIOCMPDIKAACMIKCMGFANFHIOPDIKAAIKONIKPDIKAAPHAJAJDCALGHGNAAEOAADCFOKBKBAADDGNAAKKMFPDIOAACMJABEGFMFAACMAAHHHCIKIOAFFHIKNOCMGFFHANAACMGFANHCMFEMAAIOCMGFHCEMKKIOGFEMPDIOAAIOAAKKIKHDKKANHCNOIOHCIKFHEDIOONIOJEAAIOAACMAAONIKJAFHEMEIEMHCIKFHAAANFHIOANCPIOIKJAJAMFKCAAAFANFHIKNOIKFHAAJAANCKANPDIOAACMKCIKNOIOGFNFAAJAIKFHMFEMJEAAKKIKPDEMEMAACMIKFHEMHCOEEMJAJAMFEMAAGFIOHHMFAACMANHDIKPDEMGFIKFHGNAALJANCMGFNFAAIOCMGFHCEMKKIOGFEMPDEMEIAAIOAAOEGFOOHCHDIKFHIOONIKFHAAIKCMJAANEDANPDANCMNFAAHCEMANONGFIOFHJAMFHDAAIKHCOONBIOEMHDGNAAKJIKPDPDEMONGFIOFHAAONIKJACMGFHCOOONGFIKHCIKFHAAFHIKAADDPDANFHEMAACMAAPGGNAAMBGNAADBONIKFHPDEMFHMFHDAACMIKAFNOANPDAAIOCMGFHCEMKKIOGFEMPDNFAADBONDLGAAACMAAHHIKFHMFOEEMJAJAIKEIAAHDANJAEMFHHCEMJAJAIKCMGFNFPJJEAACMONIKHCIKCMGFNFPJAAIOAACMIOPDNFJAMFHDAAFHIKIKHCOONBEMJAIOEMHDGNAAEOMFCMIKONIKEIAAHDANJAEMFHHCEMJAJAIKCMGFNFPJAAIOAAPDOOCKOEIOHDIOAAKKIKEMFHMFHDIOAACFFHIKGFAAGFOOGFAAKKOONOEMGFAADCDCGHALAACCHCANAFANJEAAONIKGFIKHCANBEAAHHHCIKAAONIKJAGFHCIKPDNFJEAAANAAJAEMAAHHHCIKAAHIGFIKAAFHIKGFAAFHCMIFHMAAONANCKEMCMGFFHANHDIOAAIKKKPDANNOANPDAANOHCOODDIKEIAAJAIKFHMFEIAAIOCMGFHCEMKKIOGFEMPDNFAACLANDLGHGNAAMBAADCFOKBKBAADDGNAAHHHCIKIOAFFHIKNOCMGFFHIKAAKKIKEMHHHCIOHHANCMIKFHAALMCMIKIKGFFHEMGFCMGFFHOOPJEDIOEIAAJAANHCONIKHDANGFAAFHIKAFDDPDANFHPDBEPDAAHNGNAACLGNAAEOANJAJAIOONIKFHECAAIKCMGFANPDIKCMNFAAHHIKCKGFIOAAJAANAAHHHCEMNBJAEMHDAAOOHCIKFHJAEMJEAAIKKKEMCMHHEMCKIOFHANBEAAHHIKGFHCEMKKJAIKCMGFIOAAFHIKEICMONGNAALAHCIOAAHIGFIKHDAAAFJAANCKIOGFEMPDNFJAIKAAFHMFHCIKCMAAFHMFHHOOCMONAACMJAANHCBENOIKFHAACMHCEMNOJAEMDDIKAAIOAAONHCOOHHJAIKDDIKAAONANPDIOKKHCANAAIOAAONAAHHHCIKGFIOFHIKGFANJAONIKFHMFHDAAHHOOOEONANHDJEAAFHAADCFOKBPHAADDGNAAIKJAAAHHHCIKNOIKPDNBANPDAAIKCMGFANFHANGFNFCMBEAAFHMFCMIKONIOHDJEAANOIKCMGFIODDJAOOFHAAHDANONCMIOHDANPDNFJAIKEIAAHDEMCMBECKJAIKEIAACPIOCCHCMFAAFHAAANHHHCEMPDEMGNAALAIKCMPDEMAAHCANAFDDHCIKHDANAAICEMHCHDANJAIOIOAAHHHCIKIOAFFHIKNOCMGFFHIKAAKKIKEMHHHCIOHHANCMIKFHAAHCEMAFONIKAACMIKONHCANGFIOPDIKCMNFGNAAHAHDEMJANFOEIOPDIKCMNFAAONIKPDIOCKEMCMGFFHIKAAFHIKIKHCOONBEMJAIOBEJEAAIKNOJAANONIKAAGFEMHDHHMFAAFHMFHHOOCMONANAACMANHDIKPDEMGFIKFHAAIOAAIKCMIKKKEMJAJAIKAAKKHCIKJAEMGFANJAONIKFHIKEIAAGFEMKCJAIOONIOAAIKCMGFANFHANPDIOCMNFAAFHMFCMIKONIOHDIOAANOIKAAIKONIKJACKANJAIOBEAAFHIKEIJAMFAACMAADBHHIKJAIOEMEIGNBMBMBM"

def replace_pairs(input_string):
    # Словарь для замены
    replacement_dict = {
        'AN': 'а',
        'FH': 'в',
        'OO': 'у',
        'CM': 'с',
        'GF': 'т',
        'JA': 'н',
        'IK': 'о',
        'ON': 'к',
        'AA': ' ',
        'EM': 'е',
        'NO': 'д',
        'HH': 'п',
        'HC': 'р',
        'IO': 'и',
        'KK': 'б',
        'NB': 'ж',
        'AF': 'з',
        'BE': 'я',
        'PD': 'л',
        'MF': 'ы',
        'CK': 'ч',
        'EI': 'й',
        'EO': 'В',
        'KC': 'х',
        'HD': 'м',
        'DB': 'Я',
        'NF': 'ь',
        'OE': 'ш',
        'NF': 'ь',
        'DD': 'г',
        'JE': ',',
        'GN': '.',
        'KJ': 'К',
        'CP': 'ц',
        'DC': '1',
        'FO': '9',
        'KO': 'О',
        'ED': 'щ',
        'JF': 'Э',
        'HI': 'э',
        'LA': 'П',
        'HA': 'У',
        'CC': 'ф',
        'KB': '4',
        'IC': 'Г',
        'CL': 'Л',
        'HN': 'Б',
        'PJ': 'ю',
        'DH': 'Д',
        'PH': '5',
        'IF': 'ё',
        'LJ': 'Ч',
        'DL': '-',
        'GH': '7',
        'MB': 'С',
        'AJ': '0',
        'DI': '%',
        'LM': '(',
        'EC': ')',
        'CF': '[',
        'HM': ']',
        'LH': 'И',
        'OP': '2',
        'AL': '8',
        'PG': 'А',
        'GA': '3',
        'BF': '6'
    }
    # Преобразуем входную строку в список символов для удобства замены
    result = list(input_string)
    # Проходим по четным индексам строки
    for i in range(0, len(result) - 1, 2):  # -1, чтобы не выйти за пределы
        pair = ''.join(result[i:i+2])  # Берем пару символов
        # Проверяем, есть ли пара в словаре
        if pair in replacement_dict:
            result[i] = replacement_dict[pair]  # Заменяем символ на русский
            # Удаляем следующий символ, так как он уже заменен
            result[i + 1] = ''
    # Объединяем список обратно в строку и удаляем пустые символы
    return ''.join(filter(None, result))

output_string = replace_pairs(string)
with open("Output.txt", "w") as text_file:
    text_file.write(output_string)



        
    